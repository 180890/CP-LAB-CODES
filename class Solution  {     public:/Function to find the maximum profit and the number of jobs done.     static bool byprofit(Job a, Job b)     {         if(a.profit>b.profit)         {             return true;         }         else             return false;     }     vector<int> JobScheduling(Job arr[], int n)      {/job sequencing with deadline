/*Given a set of N jobs where each jobi has a deadline and profit associated with it.
Each job takes 1 unit of time to complete and only one job can be scheduled at a time.
We earn the profit if and only if the job is completed by its deadline. 
The task is to find the number of jobs done and the maximum profit.
Jobs will be given in the form (Jobid, Deadline, Profit) associated with that Job.*/
class Solution 
{
    public:
    //Function to find the maximum profit and the number of jobs done.
    static bool byprofit(Job a, Job b)
    {
        if(a.profit>b.profit)
        {
            return true;
        }
        else
            return false;
    }
    vector<int> JobScheduling(Job arr[], int n) 
    { 
        // your code here
        sort(arr,arr+n,byprofit);
        int profit=0;
        int count=0;
        bool slots[n]={false};
        for(int i=0;i<n;i++)
        {
            for(int j=min(n, arr[i].dead-1);j>=0;j--)
            {
              if(slots[j]==false)
              {
                  profit+=arr[i].profit;
                  count+=1;
                  slots[j]=true;
                  break;
              }
            }
            
        }
     vector<int>res;
     res.push_back(count);
     res.push_back(profit);
     return res;
    }
};
